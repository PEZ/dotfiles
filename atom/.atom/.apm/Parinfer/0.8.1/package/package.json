{"name":"Parinfer","main":"./lib/atom-parinfer.js","version":"0.8.1","description":"Automatically infer closing parens based on indentation. An essential tool for writing LISP code.","keywords":["Parinfer","Paredit","Clojure","ClojureScript","CLJS","Lisp"],"repository":{"type":"git","url":"git+https://github.com/oakmac/atom-parinfer.git"},"license":"ISC","engines":{"atom":">=1.0.0 <2.0.0"},"dependencies":{"fs-plus":"2.8.1","simple-lru-cache":"0.0.2","underscore":"1.8.3"},"readme":"# Parinfer for Atom\n\nA [Parinfer] package for [Atom].\n\n## What is Parinfer?\n\nParinfer is a text editing mode that can infer Lisp code structure from\nindentation (and vice versa). A detailed explanation of Parinfer can be found\n[here].\n\nPut simply: the goal of Parinfer is to make it so you never have to think about\n\"balancing your parens\" when writing or editing Lisp code. Just indent your code\nas normal and Parinfer will infer the intended paren structure.\n\n## Installation\n\n1. Install [Atom]\n1. In Atom, pull up the Settings tab by pressing `Ctrl + ,` (`Cmd + ,` on Mac)\n   or using the main menu Edit --> Preferences\n1. Click on the Install tab\n1. Search for \"parinfer\" and find this package\n1. Press the Install button :)\n\n## Usage\n\nOnce the package has been installed, it will automatically load in the\nbackground when you open Atom and watch for file extensions found in a config\nfile. The default file extensions are: `.clj` `.cljs` `.cljc` `.lfe`\n\nYou can edit these file extensions by going to Packages --> Parinfer --> Edit\nFile Extensions in the menu.\n\nWhen a file is first opened, Parinfer runs [Paren Mode] on the entire file and\nthen turns on [Indent Mode] if Paren Mode succeeded (ie: the file contained\nbalanced parens). See [Fixing existing files] for more information on why this\nhappens.\n\nPlease be aware that - depending on the indentation and formatting in your Lisp\nfiles - this initial processing may result in a large diff the first time it\nhappens. Once you start using Indent Mode regularly, this initial processing is\nunlikely to result in a large diff (or any diff at all). You may even discover\nthat applying Paren Mode to a file can result in [catching very hard-to-find\nbugs] in your existing code! As usual, developers are responsible for reviewing\ntheir diffs before a code commit :)\n\nUse hotkey `Ctrl + (` to turn Parinfer on and to toggle between Indent Mode and\nParen Mode.\n\nUse hotkey `Ctrl + )` to disable Pariner.\n\nThe status bar will indicate which mode you are in or show nothing if Parinfer\nis turned off.\n\nIf you are in Paren Mode and Parinfer detects unbalanced parens (ie: code that\nwill not compile), the status bar text will be red. Note that this will never\nhappen in Indent Mode because Parinfer ensures that parens are always balanced.\n\nMore options and configuration settings are planned for future releases. Browse\nthe [issues] for an idea of future features. Create a new issue if you can think\nof a useful feature :)\n\n## Known Limitations\n\nThis extension uses a trick for performance reasons that may act oddly in\ncertain circumstances. It assumes that an open paren followed by a \"word\"\ncharacter - ie: regex `^\\(\\w` - at the start of a line is the start of a new\nexpression and tells the Parinfer algorithm to start analyzing from there until\nthe next line that matches the same regex. In 99% of cases, this is probably a\ncorrect assumption, but might break inside multi-line strings or other\nnon-standard circumstances (hat-tip to [Shaun] for pointing out the multi-line\nstring case). This is tracked at [Issue #9]; please add to that if you\nexperience problems.\n\natom-parinfer keeps a small [LRU cache] of Indent Mode and Paren Mode results\nfor performance reasons. The size of the cache is small and unlikely to cause\nproblems on modern hardware. If you run into memory issues using atom-parinfer,\nplease open an issue.\n\nPlease take note: this is a new extension and Parinfer itself is very new.\nPlease report bugs and feature requests in the [issues].\n\n## Future Features\n\nFuture features include:\n\n* JSHint-like comments to automatically \"turn on\" Parinfer for files (Issue #5)\n* JSHint-like comments to tell Parinfer to ignore sections of your code (Issue #6)\n* Better UX before Paren Mode makes changes to a newly-opened file (Issue #18)\n* A menu option to run Paren Mode on all files in a directory (Issue #21)\n\n## License\n\n[ISC License]\n\n[here]:http://shaunlebron.github.io/parinfer/\n[Parinfer]:http://shaunlebron.github.io/parinfer/\n[Atom]:https://atom.io/\n[issues]:https://github.com/oakmac/atom-parinfer/issues\n[catching very hard-to-find bugs]:https://github.com/oakmac/atom-parinfer/commit/d4b49ec2636fd0530f3f2fbca9924db6c97d3a8f\n[Shaun]:https://github.com/shaunlebron/\n[Issue #9]:https://github.com/oakmac/atom-parinfer/issues/9\n[Paren Mode]:http://shaunlebron.github.io/parinfer/#paren-mode\n[Indent Mode]:http://shaunlebron.github.io/parinfer/#indent-mode\n[Fixing existing files]:http://shaunlebron.github.io/parinfer/#fixing-existing-files\n[LRU cache]:https://en.wikipedia.org/wiki/Cache_algorithms#LRU\n[ISC License]:LICENSE.md\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/oakmac/atom-parinfer/issues"},"homepage":"https://github.com/oakmac/atom-parinfer#readme","_id":"Parinfer@0.8.1","_shasum":"c7a562a3e1373d988f05ed2ac496ab54a7a356aa","_resolved":"file:../d-1151019-7958-1iiuhz5/package.tgz","_from":"../d-1151019-7958-1iiuhz5/package.tgz"}